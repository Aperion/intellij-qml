{
  parserClass = "name.kropp.intellij.qml.QmlParser"
  extends = "com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix = "Qml"
  psiImplClassSuffix = "Impl"
  psiPackage = "name.kropp.intellij.qml.psi"
  psiImplPackage = "name.kropp.intellij.qml.psi.impl"

  elementTypeHolderClass = "name.kropp.intellij.qml.psi.QmlTypes"
  elementTypeClass = "name.kropp.intellij.qml.psi.QmlElementType"
  tokenTypeClass = "name.kropp.intellij.qml.psi.QmlTokenType"

  tokens = [
    KEYWORD_IMPORT = 'import'
    KEYWORD_AS = 'as'
    KEYWORD_DEFAULT = 'default'
    KEYWORD_PROPERTY = 'property'
    KEYWORD_VAR = 'var'
    LBRACE = '{'
    RBRACE = '}'
    COLON = ':'
    TRUE = 'true'
    FALSE = 'false'
  ]

  //psiImplUtilClass = "name.kropp.intellij.qml.psi.QmlPsiImplUtil"
}

qml ::= imports object

imports ::= import*
import ::= 'import' module version? ('as' qualifier)?
version ::= float // version_major '.' version_minor actually
module ::= identifier
qualifier ::= identifier

line_comment ::=
block_comment ::=

object ::= type body
body ::= '{' (property_definition|attribute_assignment)* '}'
type ::= identifier

attribute_assignment ::= (attribute ':')? attribute_value
private attribute_value ::= object|string|boolean|number|identifier|value
property_definition ::= 'default'? 'property' (type|'var') property (':' attribute_value)?

property ::= identifier
attribute ::= identifier
private number ::= integer|float
private boolean ::= 'true'|'false'